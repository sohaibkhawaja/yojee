{
    "collab_server" : "",
    "contents" : "# IST687 Spring 2017 M002\n# HW6 - Viz Homework:  Air Quality Analysis\n# Sohaib Khawaja SUID 3956085181\n\n###################################################################################\n## Multiple plot function\n##\n## ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)\n## - cols:   Number of columns in layout\n## - layout: A matrix specifying the layout. If present, 'cols' is ignored.\n##\n## If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),\n## then plot 1 will go in the upper left, 2 will go in the upper right, and\n## 3 will go all the way across the bottom.\n##\n\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n  library(grid)\n  \n  # Make a list from the ... arguments and plotlist\n  plots <- c(list(...), plotlist)\n  \n  numPlots = length(plots)\n  \n  # If layout is NULL, then use 'cols' to determine layout\n  if (is.null(layout)) {\n    # Make the panel\n    # ncol: Number of columns of plots\n    # nrow: Number of rows needed, calculated from # of cols\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                     ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n  \n  if (numPlots==1) {\n    print(plots[[1]])\n    \n  } else {\n    # Set up the page\n    grid.newpage()\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n    \n    # Make each plot, in the correct location\n    for (i in 1:numPlots) {\n      # Get the i,j matrix positions of the regions that contain this subplot\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n      \n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                      layout.pos.col = matchidx$col))\n    }\n  }\n}\n## End of multiplot() Function\n###################################################################################\n\n\n\n\n# Step 1: Load the data\n# We will use the airquality data set, that you should already have as part of your R installation.\n\n#install.packages(\"ggplot2\")\n#install.packages(\"mitools\")\nlibrary(data.table)\nlibrary(reshape2)\nlibrary(mitools)\nlibrary(ggplot2)\n\naqna <- airquality\nhead(aqna)\n\naqna$Date <- as.Date(paste(\"1973\", aqna$Month, aqna$Day, sep=\"-\"))\nhead(aqna)\n\naq <- aqna\n\n# Step 2: Clean the data\n# After you load the data, there will be some NAs in the data. You need to figure out what to do about those nasty NAs.\n\naq$Ozone[is.na(aq$Ozone)] <- round(mean(aq$Ozone, na.rm=TRUE), 2)\naq$Solar.R[is.na(aq$Solar.R)] <- round(mean(aq$Solar.R, na.rm=TRUE), 2)\nhead(aq)\n\n# Step 3: Understand the data distribution\n# Create the following visualizations:\n  #\tHistograms for each of the variables  \n\nhead(aq)\n\nsummary(aq$Ozone)\n# Histogram Ozone\ng1 <- ggplot(aqna,aes(x=Ozone)) + geom_histogram(binwidth = 10, color=\"white\", fill =\"grey50\") \ng1 <- g1 + labs(title=\"1973 Ozone Data\", x=\"Ozone Level\", y=\"Frequency\")\ng1 <- g1 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng1\n\ng2 <- ggplot(aq,aes(x=Ozone))+ geom_histogram(binwidth = 10, color=\"white\", fill =\"grey50\") \ng2 <- g2 + labs(title=\"1973 Ozone Data\", x=\"Ozone Level [NAs replaced with Mean]\", y=\"Frequency\")\ng2 <- g2 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng2\nmultiplot(g1, g2, cols = 1)\n\nsummary(aq$Solar.R)\n# Histogram Solar Radiation\ng1 <- ggplot(aqna,aes(x=Solar.R)) + geom_histogram(binwidth = 10, color=\"white\", fill=\"green\")\ng1 <- g1 + labs(title=\"1973 Solar Radiation Data\", x=\"Solar Radiation Level\", y=\"Frequency\")\ng1 <- g1 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng1\n\ng2 <- ggplot(aq,aes(x=Solar.R)) + geom_histogram(binwidth = 10, color=\"white\", fill=\"green\")\ng2 <- g2 + labs(title=\"1973 Solar Radiation Data\", x=\"Solar Radiation Level [NA replacedwith Mean]\", y=\"Frequency\")\ng2 <- g2 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng2\nmultiplot(g1, g2, cols = 1)\n\nsummary(aq$Temp)\n# Histogram Temperature\ng <- ggplot(aqna,aes(x=Temp)) + geom_histogram(binwidth = 1, color=\"white\", fill=\"dodgerblue\")\ng <- g + labs(title=\"1973 Temperature Data\", x=\"Temperature\", y=\"Frequency\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\n\n# Histogram Wind\nsummary(aq$Wind)\ng <- ggplot(aq,aes(x=Wind)) + geom_histogram(binwidth = 1, color=\"white\", fill=\"gold\")\ng <- g + labs(title=\"1973 Wind Data\", x=\"Wind Speed\", y=\"Frequency\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\n\n#\tBoxplot for Ozone, and boxplots for different wind values (round the wind to get a good number of \"buckets\"\n\ng <- ggplot(aq, aes(x=factor(0), Ozone)) + geom_boxplot(outlier.color=\"red\")\ng <- g + labs(title=\"1973 Ozone Data\", x=\" \", y=\"Ozone Level\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\ng <- ggplot(aq, aes(x=factor(0), Wind)) + geom_boxplot(outlier.color = \"red\")\ng <- g + labs(title=\"1973 Wind Data\", x=\" \", y=\"Wind Speed\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\naq2 <- aq\naq2$Wind2 <- round(aq2$Wind, 0)\ng <- ggplot(aq2, aes(x=Wind2, y=Ozone, group=Wind2)) + geom_boxplot(outlier.color = \"red\")\ng <- g + labs(title=\"Box Plot: [1973] Ozone Level ~ Wind Speed \", x=\"Wind Speed [Rounded Values]\", y=\"Ozone Level\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\n                                  \n# Step 3: Explore how the data changes over time\n# First, make sure to create appropriate dates (this data was from 1973). \n# Then create line charts for ozone, temp, wind and solar.R \n# (one line chart for each, and then one chart with 4 lines, each having a different color). \n\ng1 <- ggplot(aqna,aes(x=Date)) + geom_line(aes(y=Ozone), size=1, color=\"grey50\")\ng1 <- g1 + labs(title=\"1973 Ozone Data\", x=\"Time\", y=\"Ozone Level\")\ng1 <- g1 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng1\ng2 <- ggplot(aq,aes(x=Date)) + geom_line(aes(y=Ozone), size=1, color=\"grey50\")\ng2 <- g2 + labs(title=\"1973 Ozone Data\", x=\"Time\", y=\"Ozone Level [NAs replaced with Mean]\")\ng2 <- g2 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng2\nmultiplot(g1, g2, cols=1)\n\ng1 <- ggplot(aqna,aes(x=Date)) + geom_line(aes(y=Solar.R), size=1, color=\"yellowgreen\")\ng1 <- g1 + labs(title=\"1973 Solar Radiation Data\", x=\"Time\", y=\"Solar Radiation Level\")\ng1 <- g1 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng1\ng2 <- ggplot(aq,aes(x=Date)) + geom_line(aes(y=Solar.R), size=1, color=\"yellowgreen\")\ng2 <- g2 + labs(title=\"1973 Solar Radiation Data\", x=\"Time\", y=\"Solar Radiation Level [NAs replaced with Mean]\")\ng2 <- g2 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng2\nmultiplot(g1, g2, cols=1)\n\ng <- ggplot(aq,aes(x=Date)) + geom_line(aes(y=Temp),size=1,color=\"dodgerblue\")\ng <- g + labs(title=\"1973 Temperature Data\", x=\"Time\", y=\"Temperature\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\ng <- ggplot(aq,aes(x=Date)) + geom_line(aes(y=Wind), size=1, color=\"gold\")\ng <- g + labs(title=\"1973 Wind Data\", x=\"Time\", y=\"Wind Speed\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\n# Note that for the chart with 4 lines, you need to think about how to effectively use the y-axis.\n\nscale <- function(v){\n  min <- min(v)\n  max <- max(v)\n  v1 <- (v-min)/(max-min)\n  return (v1)\n}\n\nmy.aq <- aq\nmy.aq[ ,1:4] <- sapply(aq[,1:4], scale)\nhead(my.aq)\n\ng1 <- ggplot(aq, aes(x=Date)) + geom_line(aes(y=Ozone), color=\"grey50\", size=1)\ng1 <- g1 + geom_line(aes(y=Solar.R), size=1, color=\"yellowgreen\")\ng1 <- g1 + geom_line(aes(y=Temp), size=1, color=\"dodgerblue\")\ng1 <- g1 + geom_line(aes(y=Wind), size=1, color=\"gold\")\ng1 <- g1 + labs(title=\"1973 Air Quality Data\", x=\"Time\", y=\"Values\")\ng1 <- g1 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng1\ng2 <- ggplot(my.aq, aes(x=Date)) + geom_line(aes(y=Ozone), color=\"grey50\", size=1)\ng2 <- g2 + geom_line(aes(y=Solar.R), size=1, color=\"yellowgreen\")\ng2 <- g2 + geom_line(aes(y=Temp), size=1, color=\"dodgerblue\")\ng2 <- g2 + geom_line(aes(y=Wind), size=1, color=\"gold\")\ng2 <- g2 + labs(title=\"1973 Air Quality Data [Scaled 0 ~ 1]\", x=\"Time\", y=\"Values\")\ng2 <- g2 + theme(plot.title = element_text(hjust = 0, vjust=0))\ng2\nmultiplot(g1, g2, cols=1)\n\n\n#Step 4: Look at all the data via a Heatmap\n#Create a heatmap, with each day along the x-axis and ozone, temp, wind and solar.r along the y-axis, and days as rows along the y-axis. \n#Note that you need to figure out how to show the relative change equally across all the variables.\n\nhead(my.aq)\ndf <- data.frame(my.aq[,c(1,2,3,4)])\naqm <- as.matrix(df)\nM <- melt(aqm)\nM$Date <- my.aq$Date\ng <- ggplot(M, aes(Date, Var2)) + geom_tile(aes(fill=value)) + scale_color_gradient(low=\"white\", high=\"darkred\")\ng <- g + labs(title=\"1973 Air Quality Data Heatmap\", x=\"Days [May 1st ~ September 30th]\", y=\"Variables\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\n\n# Step 5: Look at all the data via a scatter chart\n# Create a scatter chart, with the x-axis representing the wind, the y-axis representing the temperature, \n# the size of each dot representing the ozone and the color representing the solar.R\n\ng <- ggplot(aq,aes(x=Wind, y=Temp, color=Solar.R, size=Ozone)) + geom_point()\ng <- g + labs(title=\"1973 Air Quality Data\", x=\"Wind Speed\", y=\"Temperature\")\ng <- g + theme(plot.title = element_text(hjust = 0, vjust=0))\ng\n\n\n# Step 6: Final Analysis\n  # Do you see any patterns after exploring the data?  \n\ncat(\"visually negative correlation between temp and Wind speed. Also Ozone value seems to be higher mainly at \\nhigher temperature, mainly above 75. Solar.R seems to be pretty random, it appears everywhere.\")\n\n  # What was the most useful visualization?\ncat(\"Scatter Plot and Heat Map seems to be very useful as multiple dimensions can be\\nvisualized using a 2-dimensional plot.\")\n\n\n",
    "created" : 1506307770647.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2643748743",
    "id" : "8DF506DA",
    "lastKnownWriteTime" : 1488502406,
    "last_content_update" : 1488502406,
    "path" : "C:/Users/xSquareGroup/OneDrive/Sohaib/IST687 - Applied Data Science/IST687-skhawaja-HW6.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}