plot(cars)
install.packages("TSP")
install.packages("maptools")
library("mitools")
plot(cars)
library("mitools")
library("sp")
library("maptools")
library("TSP")
library("plyr")
library("sp")
library("maptools")
library("TSP")
detach("package:mitools", unload=TRUE)
setwd(".\\")
# set options and libraries
library("sp")
library("maptools")
library("TSP")
setwd(".\\")
options(digits=9)
loc.raw <- read.csv2(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(loc.raw)
str(loc.raw)
head(loc.raw)
loc.raw <- read.csv2(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
str(loc.raw)
loc.raw <- read.csv2(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
str(loc.raw)
head(loc.raw)
loc <- loc.raw[is.na(loc.raw$lon), ]
loc <- loc.raw[!is.na(loc.raw$lon), ]
loc <- loc.raw[!is.na(loc.raw$lon) ]
loc <- loc.raw[!is.na(loc.raw$lon), ]
View(loc)
loc <- loc.raw[is.na(loc.raw$lon)!=TRUE, ]
loc <- loc.raw[is.na(loc.raw$lon)!=FALSE, ]
loc <- loc.raw[is.na(loc.raw$lon)==FALSE, ]
loc <- loc.raw[is.na(loc.raw$lat)==FALSE, ]
loc <- loc.raw[(is.na(loc.raw$lat)), ]
loc <- loc.raw[(!is.na(loc.raw$lat)), ]
loc <- loc.raw[(!is.na(loc.raw$lon)), ]
```{r}
loc.raw <- read.csv(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
str(loc.raw)
```{r}
head(loc.raw)
tail(loc.raw)
loc <- loc.raw[(!is.na(loc.raw$lon)), ]
loc.new <- loc.raw[(!is.na(loc.raw$lon)), ]
loc.new$lat <- as.numeric(loc.new$lat)
```{r}
loc.new <- loc.raw[(!is.na(loc.raw$lon)), ]
loc.new$lat <- as.numeric(loc.new$lat)
str(loc.new)
head(loc.new)
```{r}
earth.dist <- function (long1, lat1, long2, lat2)
{
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
loc.cdp <- data.frame(lat = 11.552931, lon = 104.933636)
View(loc.cdp)
loc.cdp
loc.new$km <- earth.dist(loc.cdp$lon, loc.cdp$lat, loc.new$lon, loc.new$lat)
View(loc.new)
head(loc.new)
library("sp")
library("maptools")
library("TSP")
setwd(".\\")
options(digits=9)
# set options and libraries
library("sp")
library("maptools")
library("TSP")
setwd(".\\")
options(digits=9)
loc.raw <- read.csv(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
str(loc.raw)
head(loc.raw)
tail(loc.raw)
loc.new <- loc.raw[(!is.na(loc.raw$lon)), ]
loc.new$lat <- as.numeric(loc.new$lat)
str(loc.new)
head(loc.new)
# Calculate distance in kilometers between two points
earth.dist <- function (long1, lat1, long2, lat2)
{
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
loc.cdp <- data.frame(lat = 11.552931, lon = 104.933636)
loc.cdp
loc.new$km <- earth.dist(loc.cdp$lon, loc.cdp$lat, loc.new$lon, loc.new$lat)
head(loc.new)
# Calculate distance in kilometers between two points
earth.dist <- function (long1, lat1, long2, lat2)
{
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
loc.cdp <- data.frame(lat = 11.552931, lon = 104.933636)
loc.cdp
loc.new$km <- earth.dist(loc.cdp$lon, loc.cdp$lat, loc.new$lon, loc.new$lat)
head(loc.new)
tail(loc.new)
loc.new$km <- earth.dist(loc.cdp$lon, loc.cdp$lat, loc.new$lon, loc.new$lat)
head(loc.new)
tail(loc.new)
hist(loc.new$km)
boxplot(loc.new$km)
boxplot(loc.new$km~loc.new$lon)
boxplot(loc.new$km~loc.new$lat)
hist(loc.new$km)
boxplot(loc.new$km~loc.new$lat)
boxplot(loc.new$km)
??boxplot()
summary(loc.new)
bxp(loc.new$km, )
bxp(loc.new$km)
bxp(z, loc.new$km)
boxplot(loc.new$km)
boxplot2(loc.new$km)
boxplot(loc.new$km)
??boxplot
boxplot(loc.new, use.cols = TRUE)
boxplot(loc.new, use.cols = TRUE, horizontal = TRUE)
# set options and libraries
library("sp")
library("maptools")
library("TSP")
setwd(".\\")
options(digits=9)
loc.raw <- read.csv(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
str(loc.raw)
head(loc.raw)
loc.nan <- loc.raw[(is.na(loc.raw$lon)), ]
loc.nan
loc.new <- loc.raw[(!is.na(loc.raw$lon)), ]
loc.new$lat <- as.numeric(loc.new$lat)
str(loc.new)
# Calculate distance in kilometers between two points
earth.dist <- function (long1, lat1, long2, lat2)
{
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
loc.cdp <- data.frame(lat = 11.552931, lon = 104.933636)
loc.cdp
loc.new$km <- earth.dist(loc.cdp$lon, loc.cdp$lat, loc.new$lon, loc.new$lat)
head(loc.new)
tail(loc.new)
summary(loc.new)
boxplot(loc.new, use.cols = TRUE, horizontal = TRUE)
# set options and libraries
library("sp")
library("maptools")
library("TSP")
setwd(".\\")
options(digits=9)
# Read source data from locations.csv file
loc.raw <- read.csv(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
str(loc.raw)
# set options and libraries
library("sp")
library("maptools")
library("TSP")
setwd(".\\")
options(digits=9)
# Read source data from locations.csv file
loc.raw <- read.csv(file = "locations.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
str(loc.raw)
# Check first few rows of data
head(loc.raw)
# Clean dataset, filter invalid records
loc.nan <- loc.raw[(is.na(loc.raw$lon)), ]
loc.nan
# Check cleaned dataset
loc.new <- loc.raw[(!is.na(loc.raw$lon)), ]
loc.new$lat <- as.numeric(loc.new$lat)
str(loc.new)
# Function to calculate distance (Euclidean Distance) in kilometers between two points.
# Reference : https://conservationecology.wordpress.com/2013/06/30/distance-between-two-points-in-r/
earth.dist <- function (long1, lat1, long2, lat2){
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)}
# Define Central Distribution Point location
loc.cdp <- data.frame(lat = 11.552931, lon = 104.933636)
loc.cdp
# Calculate distance from Central Distribution Point to each delivery location
loc.new$km <- earth.dist(loc.cdp$lon, loc.cdp$lat, loc.new$lon, loc.new$lat)
head(loc.new)
# Check last few records
tail(loc.new)
# Check summary of dataset
summary(loc.new)
# box and whisker plot for reviewing distribution
boxplot(loc.new, use.cols = TRUE, horizontal = TRUE)
